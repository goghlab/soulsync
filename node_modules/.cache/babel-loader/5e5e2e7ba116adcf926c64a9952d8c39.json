{"ast":null,"code":"var _jsxFileName = \"/Users/izzy/Desktop/soulsync/doob/src/components/blog/sidebar/SideCategories.js\";\nimport React from 'react';\nimport { flatDeep, slugify, containsObject } from '../../../utils';\nimport BlogListData from \"../../../data/blog/BlogList.json\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideCategories = () => {\n  const cats = BlogListData.map(item => {\n    return item.categories;\n  });\n  let singleCatArray = flatDeep(cats);\n  let categories = [];\n  singleCatArray.forEach(cat => {\n    const obj = {\n      title: cat.trim(),\n      slug: slugify(cat),\n      count: 1\n    };\n    const objIndex = containsObject(obj, categories);\n    if (objIndex !== -1) {\n      const prevCount = categories[objIndex].count;\n      categories[objIndex] = {\n        title: cat.trim(),\n        slug: slugify(cat),\n        count: prevCount + 1\n      };\n    } else {\n      categories.push(obj);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"category-list \",\n    children: categories.map(cat => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: process.env.PUBLIC_URL + `/category/${cat.slug}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"left-content\",\n            children: cat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-text\",\n            children: cat.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, cat.slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = SideCategories;\nexport default SideCategories;\nvar _c;\n$RefreshReg$(_c, \"SideCategories\");","map":{"version":3,"names":["React","flatDeep","slugify","containsObject","BlogListData","Link","jsxDEV","_jsxDEV","SideCategories","cats","map","item","categories","singleCatArray","forEach","cat","obj","title","trim","slug","count","objIndex","prevCount","push","className","children","to","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/izzy/Desktop/soulsync/doob/src/components/blog/sidebar/SideCategories.js"],"sourcesContent":["import React from 'react';\r\nimport {flatDeep, slugify, containsObject} from '../../../utils';\r\nimport BlogListData from \"../../../data/blog/BlogList.json\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst SideCategories = () => {\r\n    const cats = BlogListData.map(item => {\r\n        return item.categories;\r\n    });\r\n\r\n    let singleCatArray = flatDeep(cats);\r\n    let categories = [];\r\n    singleCatArray.forEach(cat => {\r\n        const obj = {\r\n            title: cat.trim(),\r\n            slug: slugify(cat),\r\n            count: 1\r\n        }\r\n        const objIndex = containsObject(obj, categories);\r\n        if(objIndex !== -1){\r\n            const prevCount = categories[objIndex].count;\r\n            categories[objIndex] = {\r\n                title: cat.trim(),\r\n                slug: slugify(cat),\r\n                count: prevCount + 1\r\n            }\r\n        } else {\r\n            categories.push(obj);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ul className=\"category-list \">\r\n            {categories.map(cat => {\r\n                return (\r\n                    <li key={cat.slug}>\r\n                        <Link to={process.env.PUBLIC_URL + `/category/${cat.slug}`}>\r\n                            <span className=\"left-content\">{cat.title}</span> \r\n                            <span className=\"count-text\">{cat.count}</span>\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SideCategories\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,OAAO,EAAEC,cAAc,QAAO,gBAAgB;AAChE,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,IAAI,GAAGL,YAAY,CAACM,GAAG,CAACC,IAAI,IAAI;IAClC,OAAOA,IAAI,CAACC,UAAU;EAC1B,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAGZ,QAAQ,CAACQ,IAAI,CAAC;EACnC,IAAIG,UAAU,GAAG,EAAE;EACnBC,cAAc,CAACC,OAAO,CAACC,GAAG,IAAI;IAC1B,MAAMC,GAAG,GAAG;MACRC,KAAK,EAAEF,GAAG,CAACG,IAAI,EAAE;MACjBC,IAAI,EAAEjB,OAAO,CAACa,GAAG,CAAC;MAClBK,KAAK,EAAE;IACX,CAAC;IACD,MAAMC,QAAQ,GAAGlB,cAAc,CAACa,GAAG,EAAEJ,UAAU,CAAC;IAChD,IAAGS,QAAQ,KAAK,CAAC,CAAC,EAAC;MACf,MAAMC,SAAS,GAAGV,UAAU,CAACS,QAAQ,CAAC,CAACD,KAAK;MAC5CR,UAAU,CAACS,QAAQ,CAAC,GAAG;QACnBJ,KAAK,EAAEF,GAAG,CAACG,IAAI,EAAE;QACjBC,IAAI,EAAEjB,OAAO,CAACa,GAAG,CAAC;QAClBK,KAAK,EAAEE,SAAS,GAAG;MACvB,CAAC;IACL,CAAC,MAAM;MACHV,UAAU,CAACW,IAAI,CAACP,GAAG,CAAC;IACxB;EACJ,CAAC,CAAC;EAEF,oBACIT,OAAA;IAAIiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EACzBb,UAAU,CAACF,GAAG,CAACK,GAAG,IAAI;MACnB,oBACIR,OAAA;QAAAkB,QAAA,eACIlB,OAAA,CAACF,IAAI;UAACqB,EAAE,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAI,aAAYd,GAAG,CAACI,IAAK,EAAE;UAAAM,QAAA,gBACvDlB,OAAA;YAAMiB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEV,GAAG,CAACE;UAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACjD1B,OAAA;YAAMiB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEV,GAAG,CAACK;UAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC5C,GAJFlB,GAAG,CAACI,IAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKZ;IAEb,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEb,CAAC;AAAAC,EAAA,GAxCK1B,cAAc;AA0CpB,eAAeA,cAAc;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}