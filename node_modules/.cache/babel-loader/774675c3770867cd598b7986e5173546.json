{"ast":null,"code":"function flatDeep(arr) {\n  let d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return d > 0 ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), []) : arr.slice();\n}\nconst slugify = function (text) {\n  return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n  .replace(/[^\\w-]+/g, '') // Remove all non-word chars\n  .replace(/--+/g, '-') // Replace multiple - with single -\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n};\n\nfunction containsObject(obj, list) {\n  var i;\n  for (i = 0; i < list.length; i++) {\n    console.log();\n    if (list[i].slug === obj.slug) {\n      return i;\n    }\n  }\n  return -1;\n}\nexport { flatDeep, slugify, containsObject };","map":{"version":3,"names":["flatDeep","arr","d","arguments","length","undefined","reduce","acc","val","concat","Array","isArray","slice","slugify","text","toString","toLowerCase","replace","containsObject","obj","list","i","console","log","slug"],"sources":["/Users/izzy/Desktop/soulsync/doob/src/utils/index.js"],"sourcesContent":["function flatDeep(arr, d = 1) {\r\n  return d > 0 ? arr.reduce((acc, val) => acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val), [])\r\n               : arr.slice();\r\n}\r\n\r\n\r\n\r\nconst slugify = function(text) {\r\n    return text\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, '-') // Replace spaces with -\r\n      .replace(/[^\\w-]+/g, '') // Remove all non-word chars\r\n      .replace(/--+/g, '-') // Replace multiple - with single -\r\n      .replace(/^-+/, '') // Trim - from start of text\r\n      .replace(/-+$/, '') // Trim - from end of text\r\n}\r\n\r\nfunction containsObject(obj, list) {\r\n  var i;\r\n  for (i = 0; i < list.length; i++) {\r\n  console.log()\r\n      if (list[i].slug === obj.slug) {\r\n          return i;\r\n      }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nexport {flatDeep, slugify, containsObject}"],"mappings":"AAAA,SAASA,QAAQA,CAACC,GAAG,EAAS;EAAA,IAAPC,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC1B,OAAOD,CAAC,GAAG,CAAC,GAAGD,GAAG,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,CAACE,MAAM,CAACC,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,GAAGR,QAAQ,CAACQ,GAAG,EAAEN,CAAC,GAAG,CAAC,CAAC,GAAGM,GAAG,CAAC,EAAE,EAAE,CAAC,GACzFP,GAAG,CAACW,KAAK,EAAE;AAC5B;AAIA,MAAMC,OAAO,GAAG,SAAAA,CAASC,IAAI,EAAE;EAC3B,OAAOA,IAAI,CACRC,QAAQ,EAAE,CACVC,WAAW,EAAE,CACbC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAAA,CACrBA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;EAAA,CACxBA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;EAAA,CACrBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAAA,CACnBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,EAAC;AAC1B,CAAC;;AAED,SAASC,cAAcA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACjC,IAAIC,CAAC;EACL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAAChB,MAAM,EAAEiB,CAAC,EAAE,EAAE;IAClCC,OAAO,CAACC,GAAG,EAAE;IACT,IAAIH,IAAI,CAACC,CAAC,CAAC,CAACG,IAAI,KAAKL,GAAG,CAACK,IAAI,EAAE;MAC3B,OAAOH,CAAC;IACZ;EACJ;EAEA,OAAO,CAAC,CAAC;AACX;AAEA,SAAQrB,QAAQ,EAAEa,OAAO,EAAEK,cAAc"},"metadata":{},"sourceType":"module"}